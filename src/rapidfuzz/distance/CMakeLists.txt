function(create_cython_target _name)
    if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/${_name}.cxx)
        set(${_name} ${CMAKE_CURRENT_LIST_DIR}/${_name}.cxx PARENT_SCOPE)
    else()
        find_package(Cython REQUIRED)
        # should use target_include_directories once this is supported by scikit-build
        include_directories(${RF_BASE_DIR}/rapidfuzz ${RF_BASE_DIR}/rapidfuzz/distance)
        add_cython_target(${_name} CXX)
        set(${_name} ${_name} PARENT_SCOPE)
    endif()
endfunction(create_cython_target)

if (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(X86_64)|(amd64)|(AMD64)")
    set(X64 TRUE)
endif()

if (X64)
    add_library(CpuInfo STATIC ${RF_BASE_DIR}/rapidfuzz/FeatureDetector/CpuInfo.cpp)
    target_compile_features(CpuInfo PUBLIC cxx_std_14)

    add_library(edit_based_avx2 STATIC ${RF_BASE_DIR}/rapidfuzz/simd/avx2/edit_based_avx2.cpp)
    target_compile_features(edit_based_avx2 PUBLIC cxx_std_14)
    target_include_directories(edit_based_avx2 PRIVATE ${Python_INCLUDE_DIRS} ${RF_CAPI_PATH} ${RF_BASE_DIR}/rapidfuzz ${RF_BASE_DIR}/rapidfuzz/distance)
    target_link_libraries(edit_based_avx2 PRIVATE rapidfuzz::rapidfuzz)
    if (MSVC)
        set_target_properties(edit_based_avx2 PROPERTIES COMPILE_FLAGS "/ARCH:AVX2")
    else()
        set_target_properties(edit_based_avx2 PROPERTIES COMPILE_FLAGS "-mavx2")
    endif()

    add_library(edit_based_sse2 STATIC ${RF_BASE_DIR}/rapidfuzz/simd/sse2/edit_based_sse2.cpp)
    target_compile_features(edit_based_sse2 PUBLIC cxx_std_14)
    target_include_directories(edit_based_sse2 PRIVATE ${Python_INCLUDE_DIRS} ${RF_CAPI_PATH} ${RF_BASE_DIR}/rapidfuzz ${RF_BASE_DIR}/rapidfuzz/distance)
    target_link_libraries(edit_based_sse2 PRIVATE rapidfuzz::rapidfuzz)
    if (MSVC)
        set_target_properties(edit_based_sse2 PROPERTIES COMPILE_FLAGS "/ARCH:SSE2")
    else()
        set_target_properties(edit_based_sse2 PROPERTIES COMPILE_FLAGS "-msse2")
    endif()
endif()

create_cython_target(_initialize_cpp)
Python_add_library(_initialize_cpp MODULE WITH_SOABI ${_initialize_cpp})
target_compile_features(_initialize_cpp PUBLIC cxx_std_17)
target_include_directories(_initialize_cpp PRIVATE ${RF_CAPI_PATH} ${RF_BASE_DIR}/rapidfuzz ${RF_BASE_DIR}/rapidfuzz/distance)
target_link_libraries(_initialize_cpp PRIVATE rapidfuzz::rapidfuzz)
install(TARGETS _initialize_cpp LIBRARY DESTINATION src/rapidfuzz/distance)

create_cython_target(metrics_cpp)
Python_add_library(metrics_cpp MODULE WITH_SOABI ${metrics_cpp})
target_compile_features(metrics_cpp PUBLIC cxx_std_17)
target_include_directories(metrics_cpp PRIVATE ${RF_CAPI_PATH} ${RF_BASE_DIR}/rapidfuzz ${RF_BASE_DIR}/rapidfuzz/distance)
target_link_libraries(metrics_cpp PRIVATE rapidfuzz::rapidfuzz)
if (X64)
    target_link_libraries(metrics_cpp PRIVATE edit_based_avx2 edit_based_sse2 CpuInfo)
endif()
install(TARGETS metrics_cpp LIBRARY DESTINATION src/rapidfuzz/distance)
name: Build

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:
  test_python:
    name: linting and tests on Python ${{ matrix.python-version }}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run Unit Tests
        run: |
          pip install .
          pip install pytest hypothesis
          pytest


  build_wheels:
    needs: [test_python]
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
    env:
      CIBW_SKIP: cp27-win* pp27-win*

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'true'

      - uses: actions/setup-python@v1
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install git+https://github.com/joerick/cibuildwheel.git@f6eaa9f
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl


  build_wheels_python27_windows_64:
    needs: [test_python]
    name: Build wheel for python2.7 on windows-latest 64 bit
    runs-on: windows-latest
    env:
      CIBW_BUILD: cp27-win_amd64
      DISTUTILS_USE_SDK: 1
      MSSdk: 1

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'true'

      - uses: actions/setup-python@v1
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install git+https://github.com/joerick/cibuildwheel.git@f6eaa9f

      - uses: ilammy/msvc-dev-cmd@v1
      
      - name: Build 64-bit wheel
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl


  build_wheels_python27_windows_32:
    needs: [test_python]
    name: Build wheel for python2.7 on windows-latest 32 bit
    runs-on: windows-latest
    env:
      CIBW_BUILD: cp27-win32 pp27-win32
      DISTUTILS_USE_SDK: 1
      MSSdk: 1

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'true'

      - uses: actions/setup-python@v1
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install git+https://github.com/joerick/cibuildwheel.git@f6eaa9f

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86
      
      - name: Build 64-bit wheel
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl


  build_sdist:
    needs: [test_python]
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: |
          python3 setup.py sdist
          # test whether tarball contains all files required for compiling
          pip3 install dist/rapidfuzz-*.tar.gz
          pip3 uninstall rapidfuzz --yes

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz


  deploy-wheels:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build_wheels, build_wheels_python27_windows_64, build_wheels_python27_windows_32, build_sdist]
    name: deploy wheels to pypi
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}

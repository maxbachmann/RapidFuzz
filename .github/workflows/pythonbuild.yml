name: Build

on:
  push:
  pull_request:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
    env:
      CIBW_SKIP: cp27-* pp27-*
      CIBW_TEST_REQUIRES: pytest hypothesis pandas
      CIBW_TEST_COMMAND: pytest {package}/tests

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'true'

      - uses: actions/setup-python@v1
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel~=1.10.0
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_wheels_manylinux1:
    name: Build wheel with manylinux1
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
    env:
      CIBW_BUILD: cp*
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
      CIBW_MANYLINUX_I686_IMAGE: manylinux1
      CIBW_TEST_REQUIRES: pytest hypothesis pandas
      CIBW_TEST_COMMAND: pytest {package}/tests

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'true'

      - uses: actions/setup-python@v1
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel~=1.10.0
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: |
          pip3 install build; python3 -m build --sdist
          # test whether tarball contains all files required for compiling
          pip3 install dist/rapidfuzz-*.tar.gz
          pip3 uninstall rapidfuzz --yes

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz


  deploy-wheels:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build_wheels, build_wheels_manylinux1, build_sdist]
    name: deploy wheels to pypi
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
